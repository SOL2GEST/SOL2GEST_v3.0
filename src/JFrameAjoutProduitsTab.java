/*
 * To change this template, choose Tools // Templates
 * and open the template in the editor.
 */


import Métier.Produit;
import dao.BddDAO;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.ImageIcon;
import javax.swing.JTable;

/**
 *
 * @author btssio
 */
public class JFrameAjoutProduitsTab extends javax.swing.JFrame {

    DefaultTableModel model = new DefaultTableModel(); 
    JTable tab;
    
    /**
     * Creates new form JFrameDemoModeleList
     */
    public JFrameAjoutProduitsTab(JTable tab) {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        this.tab=tab;
        this.jTable2.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        String[] colums = {"Produits"};
        model.setColumnIdentifiers(colums);     
        this.jTable2.setModel(model);
        try{
            String produitsString = BddDAO.importProduitsFromText();
            String[] produitsString2 = produitsString.split("//");
            Arrays.sort(produitsString2);
            for(int i=0;i<produitsString2.length;i++){
                String[] produitString = produitsString2[i].split(";");
                String ref="";
                String unite="";
                try{
                    ref=produitString[0];
                    unite=produitString[1];
                }catch(Exception e){
                    
                }
                Produit unProduit = new Produit(ref, unite);
                model.addRow(new Object[]{unProduit.getRef()});
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Un problème est survenu", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    public static String[] getProdSelec(){
        int[] rowIndices = JFrameAjoutProduitsTab.jTable2.getSelectedRows();
        String[] rowValue = new String[rowIndices.length];
        for(int i=0;i<rowIndices.length;i++){
            rowValue[i]=(String)(JFrameAjoutProduitsTab.jTable2.getValueAt(rowIndices[i],0));
        }
        return rowValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        boutonValider = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        fieldRechercher = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("AJOUT PROD TAB");
        setIconImage(new ImageIcon("./image/logo-sol2s.png" ).getImage());
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Produits"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setColumnSelectionAllowed(true);
        jTable2.setFocusable(false);
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTable2);
        jTable2.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable2.setDefaultEditor(Object.class, null);

        boutonValider.setText("Valider");
        boutonValider.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonValiderActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Produits");

        fieldRechercher.setText("Rechercher");
        fieldRechercher.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fieldRechercherCaretUpdate(evt);
            }
        });
        fieldRechercher.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fieldRechercherFocusGained(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(fieldRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(boutonValider)
                .addGap(164, 164, 164))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fieldRechercher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonValider)
                .addContainerGap())
        );

        jMenu1.setText("Aide");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonValiderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonValiderActionPerformed
        // TODO add your handling code here:
        boolean insérer = true;
        if(getProdSelec().length==0){
            JOptionPane.showMessageDialog(null, "Veuillez sélectionner un produit", "Info", JOptionPane.INFORMATION_MESSAGE);
        }else{          
            int[] rowIndices = JFrameAjoutProduitsTab.jTable2.getSelectedRows();
            String[] rowValue = new String[rowIndices.length];
            
            String produitsString = BddDAO.importProduitsFromText();
            String[] produitsString2 = produitsString.split("//");
            for(int i=0;i<produitsString2.length;i++){
                String[] produitString = produitsString2[i].split(";");
                String ref="";
                String unite="";
                try{
                    ref=produitString[0];
                    unite=produitString[1];
                }catch(Exception e){
                    
                }
                Produit unProduit = new Produit(ref, unite);
                for(int j=0;j<rowIndices.length;j++){
                    rowValue[j]=(String)(JFrameAjoutProduitsTab.jTable2.getValueAt(rowIndices[j],0));
                    if(unProduit.getRef().equals(rowValue[j])){
                        model = (DefaultTableModel) tab.getModel();
                        for(int k=0;k<tab.getRowCount();k++){
                            if(unProduit.getRef().equals(tab.getValueAt(k, 0))){
                                insérer=false;
                                JOptionPane.showMessageDialog(null, "Ce produit est déja présent dans le tableau", "Erreur", JOptionPane.ERROR_MESSAGE);
                            }
                        }
                        if(insérer){
                            model.addRow(new Object[]{unProduit.getRef(),0,unProduit.getUnite(),(float)0,(float)0});
                        }
                    }
                }
            }     
            if(insérer){
                this.dispose();
            }            
        }
    }//GEN-LAST:event_boutonValiderActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Pour ajouter plusieurs produits au tableau, maintenir la touche ctrl et sélectionner les lignes, puis valider",
                "Infos", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void fieldRechercherFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fieldRechercherFocusGained
        // TODO add your handling code here:
        fieldRechercher.setText("");
    }//GEN-LAST:event_fieldRechercherFocusGained

    private void fieldRechercherCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_fieldRechercherCaretUpdate
        // TODO add your handling code here:
        int rowCount = this.jTable2.getRowCount();
        for (int i=rowCount-1 ; i>=0 ; --i) model.removeRow(i);

        try{
            String produitsString = BddDAO.importProduitsFromText();
            String[] produitsString2 = produitsString.split("//");
            Arrays.sort(produitsString2);
            for(int i=0;i<produitsString2.length;i++){
                String[] produitString = produitsString2[i].split(";");
                String ref="";
                String unite="";
                try{
                    ref=produitString[0];
                    unite=produitString[1];
                }catch(Exception e){
                    
                }
                Produit unProduit = new Produit(ref, unite);
                if(unProduit.getRef().contains(fieldRechercher.getText()) || unProduit.getRef().contains(fieldRechercher.getText().toUpperCase())){
                    model.addRow(new Object[]{unProduit.getRef(),unProduit.getUnite()});
                }
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Un problème est survenu au chargement de la BDD", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_fieldRechercherCaretUpdate

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonValider;
    private javax.swing.JTextField fieldRechercher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private static javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
