/*
 * To change this template, choose Tools // Templates
 * and open the template in the editor.
 */

import Métier.Fournisseur;
import com.github.lgooddatepicker.components.DateTimePicker;
import com.github.lgooddatepicker.components.TimePickerSettings;
import DAO.BddDAO;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Time;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.xssf.usermodel.XSSFCellStyle;
import org.apache.poi.xssf.usermodel.XSSFFont;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author btssio
 */
public class JFrameBonCommandePompe extends javax.swing.JFrame {
    
    File fichierOuvert;
    boolean modif = false;
    
    /**
     * Creates new form JFrameDemoModeleList
     */
    public JFrameBonCommandePompe() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
        DefaultTableModel model = (DefaultTableModel) tabProd.getModel();
        model.addTableModelListener(new ChangeTableModelBDCPompe(tabProd, fieldMontantTotal));
        model.addRow(new Object[]{"Flèche 24 ou 28 ml ou plus",0,"ml",(float)0,(float)0});
        model.addRow(new Object[]{"Centrale : ",0,"",(float)0,(float)0});
        model.addRow(new Object[]{"Tel : ",0,"",(float)0,(float)0});
        model.addRow(new Object[]{"Heure pompe : ",0,"",(float)0,(float)0});
        model.addRow(new Object[]{"Heure béton : ",0,"",(float)0,(float)0});
        model.addRow(new Object[]{"Volume : ",0,"",(float)0,(float)0});
        fieldLieu.setText(JFrameDevisGest.getjTextField14().getText()+" - "+JFrameDevisGest.getjTextField3().getText());
        fieldRefClient.setText(JFrameDevisGest.getjComboBox5().getSelectedItem().toString());
        
        Date actuelle = new Date();
        DateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
        String dat = dateFormat.format(actuelle);
        this.jTextField4.setText(dat);
        try{
            String fournisseursString = BddDAO.importFournisseursFromText();
            String[] fournisseursString2 = fournisseursString.split("//");
            for (String fournisseursString21 : fournisseursString2) {
                String[] fournisseurString = fournisseursString21.split(";");
                String libelle="";
                String correspondant="";
                String tel="";
                String fax="";
                String mail="";
                try{
                    libelle=fournisseurString[0];
                    correspondant=fournisseurString[1];
                    tel=fournisseurString[2];
                    fax=fournisseurString[3];
                    mail=fournisseurString[4];
                }catch(Exception e){
                    
                }
                Fournisseur unFournisseur = new Fournisseur(libelle, correspondant, tel, fax, mail);
                JFrameBonCommandePompe.comboBoxFourni.addItem(unFournisseur.getLibelle());
            }        
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Un problème est survenu au chargement de la BDD", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField6 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton(new ImageIcon("./image/modify-icon.png" ));
        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        checkBoxEmetteur1 = new javax.swing.JCheckBox();
        checkBoxEmetteur2 = new javax.swing.JCheckBox();
        checkBoxEmetteur3 = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        checkBoxDemandePrix = new javax.swing.JCheckBox();
        checkBoxBonCommande = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        fieldRefClient = new javax.swing.JTextField();
        fieldTel = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        fieldFax = new javax.swing.JTextField();
        fieldCorres = new javax.swing.JTextField();
        fieldMontantTotal = new javax.swing.JTextField();
        comboBoxFourni = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        fieldMail = new javax.swing.JTextField();
        boutonFourni = new javax.swing.JButton(new ImageIcon("./image/modifier-icone.png" ));
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabProd = new javax.swing.JTable();
        boutonAjoutProd = new javax.swing.JButton();
        boutonProd = new javax.swing.JButton(new ImageIcon("./image/modifier-icone.png" ));
        boutonComp = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        fieldDate = new javax.swing.JTextField();
        fieldLieu = new javax.swing.JTextField();
        boutonCalendrier = new javax.swing.JButton(new ImageIcon("./image/calendrier.png" ));
        jLabel16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("BDC POMPE");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("EMETTEUR");

        checkBoxEmetteur1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxEmetteur1ActionPerformed(evt);
            }
        });

        checkBoxEmetteur2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxEmetteur2ActionPerformed(evt);
            }
        });

        checkBoxEmetteur3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxEmetteur3ActionPerformed(evt);
            }
        });

        jLabel2.setText("Williams SOALHAT - 06 58 28 95 79");

        jLabel3.setText("Denis SABARON - 06 50 28 73 53");

        jLabel4.setText("Alex ROUSSEAU - 06 31 64 68 05");

        jLabel5.setText("DESTINATAIRE :");

        jLabel6.setText("Correspondant :");

        jLabel7.setText("Réf client :");

        jLabel8.setText("Le :");

        jLabel10.setText("Tel :");

        jLabel11.setText("Fax :");

        jLabel12.setText("Montant total HT :");

        checkBoxDemandePrix.setText("DEMANDE DE PRIX");
        checkBoxDemandePrix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxDemandePrixActionPerformed(evt);
            }
        });

        checkBoxBonCommande.setSelected(true);
        checkBoxBonCommande.setText("BON DE COMMANDE");
        checkBoxBonCommande.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxBonCommandeActionPerformed(evt);
            }
        });

        fieldMontantTotal.setFocusable(false);

        comboBoxFourni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFourniActionPerformed(evt);
            }
        });

        jLabel14.setText("mail :");

        boutonFourni.setToolTipText("Ajouter/Modifier/Suprrimer un Fournisseur");
        boutonFourni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonFourniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator2)
            .addComponent(jSeparator3)
            .addComponent(jSeparator4)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBoxBonCommande)
                            .addComponent(checkBoxDemandePrix))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldMontantTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(checkBoxEmetteur3)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(104, 104, 104)
                                        .addComponent(checkBoxEmetteur2))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(checkBoxEmetteur1)))
                        .addGap(69, 69, 69)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldMail, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(comboBoxFourni, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(boutonFourni)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldCorres, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldRefClient, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkBoxEmetteur1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(3, 3, 3)))))
                .addGap(8, 8, 8)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(checkBoxEmetteur2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(checkBoxEmetteur3)
                    .addComponent(jLabel4))
                .addGap(16, 16, 16)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boutonFourni, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(fieldRefClient, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(comboBoxFourni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(14, 14, 14)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldCorres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(fieldTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fieldFax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(fieldMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(checkBoxDemandePrix)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBoxBonCommande))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(fieldMontantTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESIGNATION", "QTT", "UNITE", "PRIX U", "MONTANT HT"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabProd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tabProdFocusLost(evt);
            }
        });
        tabProd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabProdKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabProd);
        if (tabProd.getColumnModel().getColumnCount() > 0) {
            tabProd.getColumnModel().getColumn(0).setPreferredWidth(300);
            tabProd.getColumnModel().getColumn(1).setPreferredWidth(30);
            tabProd.getColumnModel().getColumn(2).setPreferredWidth(30);
            tabProd.getColumnModel().getColumn(3).setPreferredWidth(30);
            tabProd.getColumnModel().getColumn(4).setPreferredWidth(60);
        }

        boutonAjoutProd.setText("+");
        boutonAjoutProd.setToolTipText("Ajouter des produits dans le tableau");
        boutonAjoutProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonAjoutProdActionPerformed(evt);
            }
        });

        boutonProd.setToolTipText("Ajouter/Modifier/Suprrimer un Produit");
        boutonProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonProdActionPerformed(evt);
            }
        });

        boutonComp.setText("+COMP");
        boutonComp.setToolTipText("Ajouter des produits dans le tableau");
        boutonComp.setMargin(new java.awt.Insets(2, 2, 2, 2));
        boutonComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCompActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(boutonProd, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(boutonAjoutProd, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE)
                    .addComponent(boutonComp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(boutonProd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonAjoutProd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(boutonComp, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setText("LIEU DE LIVRAISON :");

        jLabel13.setText("DATE DE LIVRAISON SOUHAITEE :");

        boutonCalendrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonCalendrierActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator5)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fieldLieu))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boutonCalendrier, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(fieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(fieldLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(fieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(boutonCalendrier, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel16.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 13)); // NOI18N
        jLabel16.setText("BON DE COMMANDE POMPE");

        jMenu1.setText("Fichier");

        jMenuItem6.setText("Enregistrer sous");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuItem2.setText("Imprimer");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Aide");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void boutonAjoutProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonAjoutProdActionPerformed
        // TODO add your handling code here:
        new JFrameAjoutProduitsTab(tabProd).setVisible(true);
    }//GEN-LAST:event_boutonAjoutProdActionPerformed

    private void comboBoxFourniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFourniActionPerformed
        // TODO add your handling code here:
        try{
            String fournisseursString = BddDAO.importFournisseursFromText();
            String[] fournisseursString2 = fournisseursString.split("//");
            for (String fournisseursString21 : fournisseursString2) {
                String[] fournisseurString = fournisseursString21.split(";");
                String libelle="";
                String correspondant="";
                String tel="";
                String fax="";
                String mail="";
                try{
                    libelle=fournisseurString[0];
                    correspondant=fournisseurString[1];
                    tel=fournisseurString[2];
                    fax=fournisseurString[3];
                    mail=fournisseurString[4];
                }catch(Exception e){
                    
                }
                Fournisseur unFournisseur = new Fournisseur(libelle, correspondant, tel, fax, mail);
                if(JFrameBonCommandePompe.comboBoxFourni.getSelectedItem().equals(unFournisseur.getLibelle())){
                    JFrameBonCommandePompe.fieldCorres.setText(unFournisseur.getCorrespondant());
                    JFrameBonCommandePompe.fieldTel.setText(unFournisseur.getTel());
                    JFrameBonCommandePompe.fieldFax.setText(unFournisseur.getFax());
                    JFrameBonCommandePompe.fieldMail.setText(unFournisseur.getMail());
                }
            }
        
            Fournisseur unFournisseur = JFrameAjoutFournisseur.getFournisseur();
            if(JFrameBonCommandePompe.comboBoxFourni.getSelectedItem().equals(unFournisseur.getLibelle())){
                JFrameBonCommandePompe.fieldCorres.setText(unFournisseur.getCorrespondant());
                JFrameBonCommandePompe.fieldTel.setText(unFournisseur.getTel());
                JFrameBonCommandePompe.fieldFax.setText(unFournisseur.getFax());   
                JFrameBonCommandePompe.fieldMail.setText(unFournisseur.getMail());
            } 
        }catch(Exception e){        
        }
    }//GEN-LAST:event_comboBoxFourniActionPerformed

    private void checkBoxEmetteur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxEmetteur1ActionPerformed
        // TODO add your handling code here:
        this.checkBoxEmetteur2.setSelected(false);
        this.checkBoxEmetteur3.setSelected(false);
    }//GEN-LAST:event_checkBoxEmetteur1ActionPerformed

    private void checkBoxEmetteur2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxEmetteur2ActionPerformed
        // TODO add your handling code here:
        this.checkBoxEmetteur1.setSelected(false);
        this.checkBoxEmetteur3.setSelected(false);
    }//GEN-LAST:event_checkBoxEmetteur2ActionPerformed

    private void checkBoxEmetteur3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxEmetteur3ActionPerformed
        // TODO add your handling code here:
        this.checkBoxEmetteur1.setSelected(false);
        this.checkBoxEmetteur2.setSelected(false);
    }//GEN-LAST:event_checkBoxEmetteur3ActionPerformed

    private void checkBoxDemandePrixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxDemandePrixActionPerformed
        // TODO add your handling code here:
        this.checkBoxBonCommande.setSelected(false);
    }//GEN-LAST:event_checkBoxDemandePrixActionPerformed

    private void checkBoxBonCommandeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxBonCommandeActionPerformed
        // TODO add your handling code here:
        this.checkBoxDemandePrix.setSelected(false);
    }//GEN-LAST:event_checkBoxBonCommandeActionPerformed

    public void saveBonCommandeImpressionInXlsx(String nomFichier) throws FileNotFoundException, IOException{
        // TODO add your handling code here:
        try{
            String destinataire = comboBoxFourni.getSelectedItem().toString();
            String refClient = fieldRefClient.getText();
            String lieuLivraison = fieldLieu.getText();     
            String dateLivraison = fieldDate.getText();
            String correspondant = fieldCorres.getText();    
            String tel = fieldTel.getText();     
            String fax = fieldFax.getText();
            String mail = fieldMail.getText();     
            String montantTotal = fieldMontantTotal.getText();     

            FileInputStream fichier = new FileInputStream(new File("./BonDeCommande/modeleBonCommandeImpression.xlsx"));
            //créer une instance workbook qui fait référence au fichier xlsx 
            XSSFWorkbook wb = new XSSFWorkbook(fichier);
            XSSFSheet sheet = wb.getSheetAt(0);
            //3. Créer une ligne et mettre qlq chose dedans   
            if(checkBoxEmetteur1.isSelected()){
                sheet.getRow((short) 1).getCell(1).setCellValue("x");
            }
            if(checkBoxEmetteur2.isSelected()){
                sheet.getRow((short) 2).getCell(1).setCellValue("x");
            }
            if(checkBoxEmetteur3.isSelected()){
                sheet.getRow((short) 3).getCell(1).setCellValue("x");
            }
            sheet.getRow((short) 4).getCell(0).setCellValue(sheet.getRow((short) 4).getCell(0).getStringCellValue()+" "+destinataire);
            sheet.getRow((short) 4).getCell(3).setCellValue(sheet.getRow((short) 4).getCell(3).getStringCellValue()+" "+refClient);
            sheet.getRow((short) 5).getCell(0).setCellValue(sheet.getRow((short) 5).getCell(0).getStringCellValue()+" "+correspondant);
            sheet.getRow((short) 5).getCell(3).setCellValue(sheet.getRow((short) 5).getCell(3).getStringCellValue()+" "+tel);
            sheet.getRow((short) 6).getCell(0).setCellValue(sheet.getRow((short) 6).getCell(0).getStringCellValue()+" "+mail);
            sheet.getRow((short) 6).getCell(3).setCellValue(sheet.getRow((short) 6).getCell(3).getStringCellValue()+" "+fax);
            if(checkBoxDemandePrix.isSelected()){
                sheet.getRow((short) 7).getCell(1).setCellValue("x");
            }
            if(checkBoxBonCommande.isSelected()){
                sheet.getRow((short) 8).getCell(1).setCellValue("x");
            }
            sheet.getRow((short) 7).getCell(3).setCellValue(sheet.getRow((short) 7).getCell(3).getStringCellValue()+" "+montantTotal);
            sheet.getRow((short) 10).getCell(0).setCellValue(sheet.getRow((short) 10).getCell(0).getStringCellValue()+" "+lieuLivraison);   
            sheet.getRow((short) 11).getCell(0).setCellValue(sheet.getRow((short) 11).getCell(0).getStringCellValue()+" "+dateLivraison);   

            XSSFFont fonte = wb.createFont();
            fonte.setBold(true);
            fonte.setFontHeight(11);

            XSSFCellStyle cellStyle = wb.createCellStyle();
            cellStyle.cloneStyleFrom(wb.getCellStyleAt(13));
            cellStyle.setBorderLeft(BorderStyle.THIN);
            cellStyle.setFont(fonte);
            
            String message1="+COMPLÉMENT";
            String message2="DECHARGÉ PAR VOS SOINS";
            
            for(int i=0;i<tabProd.getRowCount();i++){
                if(((String) tabProd.getValueAt(i, 0)).equals(message1) || ((String) tabProd.getValueAt(i, 0)).equals(message2)){
                    sheet.getRow((short) 14+i).getCell(0).setCellStyle(cellStyle);
                    sheet.getRow((short) 14+i).getCell(0).setCellValue((String) tabProd.getValueAt(i, 0));
                }else{
                    sheet.getRow((short) 14+i).getCell(0).setCellValue((String) tabProd.getValueAt(i, 0));
                }
                sheet.getRow((short) 14+i).getCell(1).setCellValue(String.valueOf((float)tabProd.getValueAt(i, 1)));
                sheet.getRow((short) 14+i).getCell(2).setCellValue((String) tabProd.getValueAt(i, 2));
                sheet.getRow((short) 14+i).getCell(3).setCellValue(String.valueOf((float)tabProd.getValueAt(i, 3)));
                sheet.getRow((short) 14+i).getCell(4).setCellValue(String.valueOf((float)tabProd.getValueAt(i, 4)));
            }

            FileOutputStream fileOut;
            try {
                fileOut = new FileOutputStream(nomFichier);
                wb.write(fileOut);
                fileOut.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }catch(IOException e){    
            JOptionPane.showMessageDialog(null, "Un problème est survenu", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void saveBonCommandeInXlsx(String nomFichier) throws FileNotFoundException, IOException{
        // TODO add your handling code here:
        try{
            String emetteur = "";
            if(checkBoxEmetteur1.isSelected()){
                emetteur="1";
            }
            if(checkBoxEmetteur2.isSelected()){
                emetteur="2";
            }
            if(checkBoxEmetteur3.isSelected()){
                emetteur="3";
            }
            String destinataire = comboBoxFourni.getSelectedItem().toString();
            String refClient = fieldRefClient.getText();
            String typeBonCommande = "";
            if(checkBoxDemandePrix.isSelected()){
                typeBonCommande="1";
            }
            if(checkBoxBonCommande.isSelected()){
                typeBonCommande="2";
            }
            String lieuLivraison = fieldLieu.getText();     
            String dateLivraison = fieldDate.getText();

            FileInputStream fichier = new FileInputStream(new File("./BonDeCommande/modeleBonCommande.xlsx"));
            //créer une instance workbook qui fait référence au fichier xlsx 
            XSSFWorkbook wb = new XSSFWorkbook(fichier);
            XSSFSheet sheet = wb.getSheetAt(0);
            //3. Créer une ligne et mettre qlq chose dedans
            sheet.getRow((short) 0).getCell(1).setCellValue(emetteur);
            sheet.getRow((short) 1).getCell(1).setCellValue(destinataire);
            sheet.getRow((short) 2).getCell(1).setCellValue(refClient);
            sheet.getRow((short) 3).getCell(1).setCellValue(typeBonCommande);
            sheet.getRow((short) 4).getCell(1).setCellValue(lieuLivraison);
            sheet.getRow((short) 5).getCell(1).setCellValue(dateLivraison);   
            sheet.getRow((short) 6).getCell(1).setCellValue(Integer.toString(tabProd.getRowCount()));   

            for(int i=0;i<tabProd.getRowCount();i++){
                sheet.getRow((short) 9+i).getCell(0).setCellValue((String) tabProd.getValueAt(i, 0));
                sheet.getRow((short) 9+i).getCell(1).setCellValue(String.valueOf((float)tabProd.getValueAt(i, 1)));
                sheet.getRow((short) 9+i).getCell(2).setCellValue((String) tabProd.getValueAt(i, 2));
                sheet.getRow((short) 9+i).getCell(3).setCellValue(String.valueOf((float)tabProd.getValueAt(i, 3)));
            }

            FileOutputStream fileOut;
            try {
                fileOut = new FileOutputStream(nomFichier);
                wb.write(fileOut);
                fileOut.close();
                JOptionPane.showMessageDialog(null, "Le Bon de commande a été enregistré", "Info", JOptionPane.INFORMATION_MESSAGE);
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }catch(HeadlessException | IOException e){    
            JOptionPane.showMessageDialog(null, "Un problème est survenu", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void sauverJPanelDansFile(JPanel panneauImage, File fichier)
    throws IOException{
        BufferedImage tamponSauvegarde = new BufferedImage(
                panneauImage.getPreferredSize().width,
                panneauImage.getPreferredSize().height,
                BufferedImage.TYPE_3BYTE_BGR);
        Graphics g = tamponSauvegarde.getGraphics();
        g.setColor(Color.WHITE);
        g.fillRect(0, 0, panneauImage.getPreferredSize().width,
                panneauImage.getPreferredSize().height);
        panneauImage.paint(g);
        ImageIO.write(tamponSauvegarde, "JPG", fichier);
    }
    
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        File fichier = new File("./BonDeCommande/bonDeCommandeTest.xlsx");
        try {
            saveBonCommandeImpressionInXlsx(fichier.getAbsolutePath());
            Desktop.getDesktop().open(fichier);
            //Desktop.getDesktop().print(fichier);
            //fichier.delete();
            //JOptionPane.showMessageDialog(null, "Impression réussie", "Info", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Erreur lors de l'impression", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void tabProdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tabProdFocusLost
        // TODO add your handling code here:
        tabProd.clearSelection();
        tabProd.repaint();
    }//GEN-LAST:event_tabProdFocusLost

    private void tabProdKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabProdKeyPressed
        // TODO add your handling code here:  
        modif=true;
        int keyCode = evt.getKeyCode(); 
        if (keyCode == KeyEvent.VK_DELETE) {
            try{
                int index = tabProd.getSelectedRow();
                DefaultTableModel model = (DefaultTableModel) tabProd.getModel();
                model.removeRow(index);
                JFrameBonCommandePompe.fieldMontantTotal.setText(Float.toString(calculMontantTotal(model))+" €");
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Séléctionnez une ligne puis appuyer sur la touche suppr", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        } 
    }//GEN-LAST:event_tabProdKeyPressed

    public float calculMontantTotal(DefaultTableModel model){
        float montantTotal = 0;
        for(int i=0;i<tabProd.getRowCount();i++){
            montantTotal=montantTotal+(float)model.getValueAt(i, 4);
        }
        return arrondiCalcul(montantTotal);
    }
    
    public void chargerBonCommandeXls(String nomfichier) throws FileNotFoundException, IOException{
        FileInputStream fichier = new FileInputStream(new File(nomfichier));
        //créer une instance workbook qui fait référence au fichier xlsx 
        XSSFWorkbook wb = new XSSFWorkbook(fichier);
        XSSFSheet sheet = wb.getSheetAt(0);

        String emetteur = sheet.getRow((short) 0).getCell(1).getStringCellValue();
        String destinataire = sheet.getRow((short) 1).getCell(1).getStringCellValue();
        String refClient = sheet.getRow((short) 2).getCell(1).getStringCellValue();
        String typeBonCommande = sheet.getRow((short) 3).getCell(1).getStringCellValue();
        String lieu = sheet.getRow((short) 4).getCell(1).getStringCellValue();
        String date = sheet.getRow((short) 5).getCell(1).getStringCellValue();
        String nbProd = sheet.getRow((short) 6).getCell(1).getStringCellValue();
             
        if(emetteur.equals("1")){
            checkBoxEmetteur1.setSelected(true);
        }
        if(emetteur.equals("2")){
            checkBoxEmetteur2.setSelected(true);
        }
        if(emetteur.equals("3")){
            checkBoxEmetteur3.setSelected(true);
        }
        comboBoxFourni.setSelectedItem(destinataire);
        fieldRefClient.setText(refClient);
        if(typeBonCommande.equals("1")){
            checkBoxDemandePrix.setSelected(true);
            checkBoxBonCommande.setSelected(false);
        }
        if(typeBonCommande.equals("2")){
            checkBoxBonCommande.setSelected(true);
            checkBoxDemandePrix.setSelected(false);
        }
        fieldLieu.setText(lieu);
        fieldDate.setText(date);     
        
        DefaultTableModel model = (DefaultTableModel) tabProd.getModel();
        
        for(int i=0;i<Integer.parseInt(nbProd);i++){
            try{
                model.removeRow(i);
            }catch(Exception e){
                
            }
            model.addRow(new Object[]{}); 
            tabProd.setValueAt(sheet.getRow((short) 9+i).getCell(0).getStringCellValue(), i, 0);
            tabProd.setValueAt(Float.valueOf(sheet.getRow((short) 9+i).getCell(1).getStringCellValue()), i, 1);
            tabProd.setValueAt(sheet.getRow((short) 9+i).getCell(2).getStringCellValue(), i, 2);
            tabProd.setValueAt(Float.valueOf(sheet.getRow((short) 9+i).getCell(3).getStringCellValue()), i, 3);
        }
    }
    
    private void boutonFourniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonFourniActionPerformed
        // TODO add your handling code here:
        new JFrameFournisseurs(comboBoxFourni,fieldCorres,fieldTel,fieldFax,fieldMail).setVisible(true);
    }//GEN-LAST:event_boutonFourniActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void boutonProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonProdActionPerformed
        // TODO add your handling code here:
        new JFrameProduits().setVisible(true);
    }//GEN-LAST:event_boutonProdActionPerformed
    
    public float arrondiCalcul(float nombre){
        float arrondi = (float) Math.round(nombre * 100) / 100;
        return arrondi;
    }
    
    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Pour ajouter/supprimer/modifier un fournisseur : appuyer sur le bouton \u00e0 cot\u00e9 des destinataires\n"
                + "Pour ajouter/supprimer/modifier un produit : appuyer sur le bouton \u00e0 cot\u00e9 du tableau sous le +\n"
                + "Pour ajouter un produit au tableau : cliquer sur le bouton + \u00e0 cot\u00e9 de celui-ci\n"
                + "Pour supprimer un produit du tableau : s\u00e9lectionner une ligne et appuyer sur la touche suppr",
                "Infos", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(modif == false){
            this.dispose();
        }else{
            JOptionPane jop = new JOptionPane();			
            int option = JOptionPane.showConfirmDialog(null, "Voulez-vous enregistrer avant de quitter ?", "Enregistrer ?", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if(option == JOptionPane.OK_OPTION){
                if(fichierOuvert!=null){
                    try {
                        saveBonCommandeInXlsx(fichierOuvert.getAbsolutePath());
                        this.dispose();
                    } catch (IOException ex) {
                        Logger.getLogger(JFrameDevisGest.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }else{
                    try{            
                       JFileChooser chooser = new JFileChooser();      
                       FileNameExtensionFilter xlsxFilter = new FileNameExtensionFilter("xlsx files (*.xlsx)", "xlsx");
                       chooser.addChoosableFileFilter(xlsxFilter);
                       chooser.setFileFilter(xlsxFilter);

                       File fDirectory = new  File("./BonDeCommande"+File.separator);
                       // Dossier Courant
                      chooser.setCurrentDirectory(fDirectory); 

                      File f = new  File("BDC_POMPE_"+JFrameBonCommandePompe.comboBoxFourni.getSelectedItem()+"_"+fieldLieu.getText());
                      chooser.setSelectedFile(f);
                       //Affichage et récupération de la réponse de l'utilisateur
                       int reponse = chooser.showDialog(chooser,"Enregistrer sous");             
                      // Si l'utilisateur clique sur OK
                      if  (reponse == JFileChooser.APPROVE_OPTION){                
                             // Récupération du chemin du fichier
                            File fichier = new File(chooser.getSelectedFile().toString()+".xlsx");
                            saveBonCommandeInXlsx(fichier.getAbsolutePath());     
                            this.dispose();
                       }
                    }catch(HeadlessException he){
                        he.printStackTrace();
                    } catch (IOException ex) {
                        Logger.getLogger(JFrameDevisGest.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }else{
                if(option == JOptionPane.NO_OPTION){
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_formWindowClosing

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        try{            
           JFileChooser chooser = new JFileChooser();      
           FileNameExtensionFilter xlsxFilter = new FileNameExtensionFilter("xlsx files (*.xlsx)", "xlsx");
           chooser.addChoosableFileFilter(xlsxFilter);
           chooser.setFileFilter(xlsxFilter);

           File fDirectory = new  File("./BonDeCommande"+File.separator);
           // Dossier Courant
          chooser.setCurrentDirectory(fDirectory); 

          File f = new  File("BDC_POMPE_"+JFrameBonCommandePompe.comboBoxFourni.getSelectedItem()+"_"+fieldLieu.getText());
          chooser.setSelectedFile(f);
           //Affichage et récupération de la réponse de l'utilisateur
           int reponse = chooser.showDialog(chooser,"Enregistrer sous");             
          // Si l'utilisateur clique sur OK
          if  (reponse == JFileChooser.APPROVE_OPTION){                
                 // Récupération du chemin du fichier
                File fichier = new File(chooser.getSelectedFile().toString()+".xlsx");
                saveBonCommandeInXlsx(fichier.getAbsolutePath());    
                modif = false;
           }
        }catch(HeadlessException he){
            he.printStackTrace();
        } catch (IOException ex) {
            Logger.getLogger(JFrameDevisGest.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void boutonCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCompActionPerformed
        // TODO add your handling code here:
        try{
            DefaultTableModel model = (DefaultTableModel)tabProd.getModel();
            model.addRow(new Object[]{"+COMPLÉMENT",0,"",(float)0,(float)0});
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Un problème est survenue", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_boutonCompActionPerformed

    private void boutonCalendrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonCalendrierActionPerformed
        // TODO add your handling code here:

        // initialisation des paramètres du time picker (heure par défaut : 8h)
        TimePickerSettings timePickerSettings = new TimePickerSettings();
        timePickerSettings.initialTime = LocalTime.of(8, 0);
        
        /* afficher le calendrier */
        DateTimePicker dateTimePicker = new DateTimePicker(null, timePickerSettings);

        JDialog d = new JDialog(); // fenêtre
        d.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        d.setTitle("Choisir une date");
        d.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        d.add(dateTimePicker);
        d.pack();
        d.setLocationRelativeTo(JFrameBonCommandePompe.this);
        d.setVisible(true);

        // on récupère la date
        LocalDate localDate = dateTimePicker.getDatePicker().getDate();
        Date date = java.sql.Date.valueOf(localDate);
        // on récupère l'heure
        LocalTime localTime = dateTimePicker.getTimePicker().getTime();
        Time time = java.sql.Time.valueOf(localTime);

        /* on affiche la date et l'heure dans le jtextfiel */
        Locale locale = Locale.getDefault();
        DateFormat formatDate = DateFormat.getDateInstance(DateFormat.FULL, locale);
        DateFormat formatHeure = new SimpleDateFormat("HH:mm");
        String dateAffiche = formatDate.format(date);
        String heureAffiche = formatHeure.format(time).replace(":", "h");
        fieldDate.setText(dateAffiche.toUpperCase() + " - POMPE : " + heureAffiche);
    }//GEN-LAST:event_boutonCalendrierActionPerformed

    public void chargerBonCommandeTxt(String nomfichier){
        String bonCommandeString = BddDAO.importBonCommandeFromText(nomfichier);
        String[] bonCommandeString2 = bonCommandeString.split(";");
        
        if(bonCommandeString2[0].equals("1")){
            this.checkBoxEmetteur1.isSelected();
        }
        if(bonCommandeString2[0].equals("2")){
            this.checkBoxEmetteur2.isSelected();
        }
        if(bonCommandeString2[0].equals("3")){
            this.checkBoxEmetteur3.isSelected();
        }
        if(bonCommandeString2[1].equals("4")){
            this.checkBoxDemandePrix.isSelected();
        }
        if(bonCommandeString2[1].equals("5")){
            this.checkBoxBonCommande.isSelected();
        }
        
        JFrameBonCommandePompe.comboBoxFourni.setSelectedItem(bonCommandeString2[2]);
        this.fieldRefClient.setText(bonCommandeString2[3]);
        JFrameBonCommandePompe.fieldMontantTotal.setText(bonCommandeString2[4]);           
        this.fieldLieu.setText(bonCommandeString2[5]);
        this.fieldDate.setText(bonCommandeString2[6]);       
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boutonAjoutProd;
    private javax.swing.JButton boutonCalendrier;
    private javax.swing.JButton boutonComp;
    private javax.swing.JButton boutonFourni;
    private javax.swing.JButton boutonProd;
    private javax.swing.JCheckBox checkBoxBonCommande;
    private javax.swing.JCheckBox checkBoxDemandePrix;
    private javax.swing.JCheckBox checkBoxEmetteur1;
    private javax.swing.JCheckBox checkBoxEmetteur2;
    private javax.swing.JCheckBox checkBoxEmetteur3;
    private static javax.swing.JComboBox<String> comboBoxFourni;
    private static javax.swing.JTextField fieldCorres;
    private javax.swing.JTextField fieldDate;
    private static javax.swing.JTextField fieldFax;
    private javax.swing.JTextField fieldLieu;
    private static javax.swing.JTextField fieldMail;
    private static javax.swing.JTextField fieldMontantTotal;
    private javax.swing.JTextField fieldRefClient;
    private static javax.swing.JTextField fieldTel;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField9;
    private static javax.swing.JTable tabProd;
    // End of variables declaration//GEN-END:variables
}
